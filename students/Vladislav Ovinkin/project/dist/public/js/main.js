!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e,n){},function(t,e,n){},function(t,e,n){"use strict";n.r(e);var r={data:function(){return{items:[],totalSum:0,cartImage:"https://placehold.it/100x80"}},methods:{addProduct:function(t){var e=this;this.$root.$refs.error.clearErrorData();var n=this.items.find((function(e){return e.product_id===t.product_id}));if(n)this.$parent.putJSON("./cart/".concat(n.product_id),1).then((function(t){t.result&&(n.quantity++,e.calcSummary())}));else{var r=Object.assign({},t,{quantity:1});delete r.img,this.$parent.postJSON("/cart",r).then((function(t){t.result&&(e.items.push(r),e.calcSummary())}))}},removeProduct:function(t){var e=this;this.$root.$refs.error.clearErrorData(),t.quantity>1?this.$parent.putJSON("./cart/".concat(t.product_id),-1).then((function(n){n.result&&(t.quantity--,e.calcSummary())})):this.$parent.deleteJSON("./cart/".concat(t.product_id)).then((function(n){n.result&&(e.items.splice(e.items.indexOf(t),1),e.calcSummary())}))},getCart:function(t){var e=this;return this.$parent.getJSON(t).then((function(t){e.items=t.contents,e.totalSum=t.amount,e.$parent.cartItemsCount=t.countGoods}))},calcTotalSum:function(){var t=0;this.items.forEach((function(e){t+=e.price*e.quantity})),this.totalSum=t},getCartItemsCount:function(){return null!=this.items?this.items.length:0},calcSummary:function(){this.calcTotalSum(),this.$root.setCartItemsCount()}},mounted:function(){this.getCart("/cart")},template:'\n        <div class="cart-block" v-if="$parent.cartshow">\n            <cart-item v-for="product of items" :img="cartImage" :el="product" :key="product.product_id"></cart-item>\n            <div v-show="getCartItemsCount() > 0" class=\'cart-total\'>Итого: {{\'$\' + totalSum }}</div>\n            <div v-show="getCartItemsCount() == 0">Корзине скучно без товаров :(</div>\n        </div>\n    ',components:{"cart-item":{props:["el","img"],methods:{},template:'\n        <div class="cart-item">\n            <div class="product-bio">\n                <img :src="img" alt="Some image">\n                <div class="product-desc">\n                    <p class="product-title">{{ el.product_name }}</p>\n                    <p class="product-quantity">Quantity: {{ el.quantity }}</p>\n                    <p class="product-single-price">{{\'$\' + el.price }} each</p>\n                </div>\n            </div>\n            <div class="right-block">\n                <p class="product-price">{{\'$\' + el.quantity * el.price }}</p>\n                <button class="del-btn"\n                    @click="$parent.removeProduct(el)">&times;</button>\n            </div>\n        </div>\n    '},cart:r}},o={el:"#app",data:{cartItemsCount:0,cartshow:!1,searchLine:""},methods:{getJSON:function(t){return fetch(t).then((function(t){return t.json()}))},postJSON:function(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((function(t){return t.json()}))},putJSON:function(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({some:e})}).then((function(t){return t.json()}))},deleteJSON:function(t){return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then((function(t){return t.json()}))},toggleCartShow:function(){this.cartshow=!this.cartshow},setCartItemsCount:function(){this.cartItemsCount=this.$root.$refs.cartComp.getCartItemsCount()},filterCatalog:function(){this.$root.$refs.catalogComp.filter(this.searchLine)}},components:{catalog:{data:function(){return{items:[],filtered:[],catalogUrl:"https://raw.githubusercontent.com/vladovinkin/js-2-08_20.11/master/students/Vladislav%20Ovinkin/project/json/catalogData.json"}},methods:{getFilteredLength:function(){return null!=this.filtered?this.filtered.length:0},getProducts:function(t){var e=this;return this.$parent.getJSON(t).then((function(t){return e.items=t}))},filter:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=new RegExp(t,"i");this.filtered=this.items.filter((function(t){return e.test(t.product_name)}))}},mounted:function(){var t=this;this.getProducts("/catalog").finally((function(){return t.filter()}))},template:'\n        <div class="products">\n            <div v-if="!getFilteredLength()">Нет данных</div>\n            <catalog-item v-for="product of filtered" :el="product" :key="product.product_id"></catalog-item>\n        </div>\n    ',components:{"catalog-item":{props:["el"],template:'\n        <div class="product-item">\n            <img :src="el.img" alt="Some img">\n            <div class="desc">\n                <h3>{{ el.product_name }}</h3>\n                <p>{{ el.price }}$</p>\n                <button class="buy-btn" @click="$root.$refs.cartComp.addProduct (el)">Купить</button>\n            </div>\n        </div>\n    '}}},cart:r}};n(0),n(1),new Vue(o)}]);